local b={} getgenv().mob=nil for _,a in pairs(game:GetService("Workspace").WildernessIsland.Entities:GetChildren())do insert=true for _,_ in pairs(b)do if _==a.Name then insert=false end end if insert then table.insert(b,a.Name)end end local _=loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))() local _=_.CreateLib("Islands Autofarms","Sentinel") local _=_:NewTab("Main") local _=_:NewSection("Mob Farm") local a=_:NewDropdown("Choose Mob","Chooses the mob to autofarm",b,function(_)getgenv().mob=_ end) _:NewToggle("Start Mob Farm (must be on the island where the mob is)","Toggles the autofarming of the mobs",function(_)getgenv().autofarmmobs=_ while wait()do if getgenv().autofarmmobs==false then return end if getgenv().mob==nil then game.StarterGui:SetCore("SendNotification",{Title="Error!",Text="",Icon="",Duration=2.5}) getgenv().autofarmmobs=false return end local a=game:GetService("Workspace").WildernessIsland.Entities:FindFirstChild(getgenv().mob) if a==nil then game.StarterGui:SetCore("SendNotification",{Title="Info!",Text="There is currently no spawned mobs of this type!
Just wait until they spawn",Icon="",Duration=2.5}) while wait()do wait() if getgenv().autofarmmobs==false then return end if game:GetService("Workspace").WildernessIsland.Entities:FindFirstChild(getgenv().mob)~=nil then break end end else local _=a while wait()do a=game:GetService("Workspace").WildernessIsland.Entities:FindFirstChild(getgenv().mob) if a~=_ then break end if getgenv().autofarmmobs==false then return end if a~=nil then if a:FindFirstChild("Humanoid")then if a.Humanoid.Health==0 then wait(0.1) a:Destroy() break end end if a:FindFirstChild("HumanoidRootPart")then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=a.HumanoidRootPart.CFrame*CFrame.new(0,0,2)end end wait()end end end end) game:GetService("Workspace").WildernessIsland.Entities.ChildAdded:Connect(function()for a,_ in pairs(b)do table.remove(b,a)end for _,a in pairs(game:GetService("Workspace").WildernessIsland.Entities:GetChildren())do insert=true for _,_ in pairs(b)do if _==a.Name then insert=false end end if insert then table.insert(b,a.Name)end end a:Refresh(b)end) game:GetService("Workspace").WildernessIsland.Entities.ChildRemoved:Connect(function()for a,_ in pairs(b)do table.remove(b,a)end for _,a in pairs(game:GetService("Workspace").WildernessIsland.Entities:GetChildren())do insert=true for _,_ in pairs(b)do if _==a.Name then insert=false end end if insert then table.insert(b,a.Name)end end a:Refresh(b)end)
